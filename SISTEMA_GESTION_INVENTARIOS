import os

class Producto:
    def __init__(self, codigo, nombre, cantidad, precio):
        self.codigo = codigo
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    def __str__(self):
        return f"{self.codigo},{self.nombre},{self.cantidad},{self.precio}"

class Inventario:
    def __init__(self, archivo):
        self.archivo = archivo
        self.productos = self.cargar_inventario()

    def cargar_inventario(self):
        """Cargar los productos desde el archivo."""
        productos = []
        try:
            if os.path.exists(self.archivo):  # Verifica si el archivo existe antes de intentar abrirlo
                with open(self.archivo, 'r') as file:
                    for linea in file:
                        datos = linea.strip().split(',')
                        if len(datos) == 4:
                            producto = Producto(*datos)
                            productos.append(producto)
            else:
                print("El archivo no existe. Se creará uno nuevo.")
        except FileNotFoundError:
            print("Archivo no encontrado. Creando nuevo archivo.")
        except PermissionError:
            print("Error de permisos para acceder al archivo.")
        except Exception as e:
            print(f"Error inesperado al cargar el inventario: {e}")
        return productos

    def guardar_inventario(self):
        """Guardar los productos en el archivo."""
        try:
            with open(self.archivo, 'w') as file:
                for producto in self.productos:
                    file.write(str(producto) + '\n')
            print("Inventario actualizado correctamente.")
        except PermissionError:
            print("Error de permisos para guardar el archivo.")
        except Exception as e:
            print(f"Error inesperado al guardar el inventario: {e}")

    def agregar_producto(self, codigo, nombre, cantidad, precio):
        """Agregar un producto al inventario y al archivo."""
        nuevo_producto = Producto(codigo, nombre, cantidad, precio)
        self.productos.append(nuevo_producto)
        self.guardar_inventario()

    def actualizar_producto(self, codigo, cantidad, precio):
        """Actualizar un producto en el inventario y el archivo."""
        for producto in self.productos:
            if producto.codigo == codigo:
                producto.cantidad = cantidad
                producto.precio = precio
                self.guardar_inventario()
                return
        print(f"Producto con código {codigo} no encontrado.")

    def eliminar_producto(self, codigo):
        """Eliminar un producto del inventario y del archivo."""
        self.productos = [producto for producto in self.productos if producto.codigo != codigo]
        self.guardar_inventario()

    def mostrar_inventario(self):
        """Mostrar todos los productos del inventario."""
        if not self.productos:
            print("El inventario está vacío.")
        else:
            print("\nInventario actual:")
            for producto in self.productos:
                print(f"Código: {producto.codigo}, Nombre: {producto.nombre}, Cantidad: {producto.cantidad}, Precio: {producto.precio}")

# Interfaz de usuario en consola
def menu():
    inventario = Inventario("inventario.txt")

    while True:
        print("\n---- Menu de Inventario ----")
        print("1. Agregar Producto")
        print("2. Actualizar Producto")
        print("3. Eliminar Producto")
        print("4. Mostrar Inventario")
        print("5. Salir")
        opcion = input("Seleccione una opción: ")

        if opcion == '1':
            codigo = input("Código del producto: ")
            nombre = input("Nombre del producto: ")
            cantidad = int(input("Cantidad: "))
            precio = float(input("Precio: "))
            inventario.agregar_producto(codigo, nombre, cantidad, precio)
        elif opcion == '2':
            codigo = input("Código del producto a actualizar: ")
            cantidad = int(input("Nueva cantidad: "))
            precio = float(input("Nuevo precio: "))
            inventario.actualizar_producto(codigo, cantidad, precio)
        elif opcion == '3':
            codigo = input("Código del producto a eliminar: ")
            inventario.eliminar_producto(codigo)
        elif opcion == '4':
            inventario.mostrar_inventario()
        elif opcion == '5':
            print("Saliendo...")
            break
        else:
            print("Opción inválida.")

# Ejecutar el programa
menu()
